//Blaine Williamson
int x;
int y;
int w;
int h;
int paddleXLeft;
int paddleYLeft;
int paddleWidth;
int paddleHeight;
int paddleS;
int paddleXRight;
int paddleYRight;
int speedX;
int speedY;
boolean upL, downL;
boolean upR, downR;
color colorLeft = color(255,0,0);
color colorRight = color(0, 255, 0);
int scoreLeft = 0; 
int scoreRight = 0;
int win = 5;
float timer = millis() / 1000 ;

void setup() {
  size(1000, 800);
  x = width/2; 
  y = height/2;
  w = 25;
  h = 25;
  speedX = 4;
  speedY = 4;
  textSize(30);
  textAlign(CENTER, CENTER); 
  rectMode(CENTER);
  paddleXLeft = 20;
  paddleYLeft = height/2;
  paddleXRight = width-20;
  paddleYRight = height/2;
  paddleWidth = 20;
  paddleHeight = 150;
  paddleS = 10;
  
}
void draw() {
  background(0);
  drawCircle();
  moveCircle();
  bounceOff();
  drawPaddles();
  movePaddle();
  restrictPaddle();
  hitPaddle();
  scores();
  gameOver();
  timer();
  CoolFactor();
}
void drawPaddles() {
  fill(colorLeft);
  rect(paddleXLeft, paddleYLeft, paddleWidth, paddleHeight);
  fill(colorRight);
  rect(paddleXRight, paddleYRight, paddleWidth, paddleHeight);
}
void movePaddle() {
  if (upL) {
    paddleYLeft = paddleYLeft - paddleS;
  }
  if (downL) {
    paddleYLeft = paddleYLeft + paddleS;
  }
  if (upR) {
    paddleYRight = paddleYRight - paddleS;
  }
  if (downR) {
    paddleYRight = paddleYRight + paddleS;
  }
}
void restrictPaddle() {
  if (paddleYLeft - paddleHeight/2 < 0) {
    paddleYLeft = paddleYLeft + paddleS;
  }
  if (paddleYLeft + paddleHeight/2 > height) {
    paddleYLeft = paddleYLeft - paddleS;
  }
  if (paddleYRight - paddleHeight/2 < 0) {
    paddleYRight = paddleYRight + paddleS;
  }
  if (paddleYRight + paddleHeight/2 > height) {
    paddleYRight = paddleYRight - paddleS;
  }
}
void drawCircle() {
  fill(0,0,255);
  ellipse(x, y, w, h);
}
void moveCircle() {  
  x = x + speedX*2;
  y = y + speedY*2;
}
void hitPaddle() {
  if (x - w/2 < paddleXLeft + paddleWidth/2 && y - h/2 < paddleYLeft + paddleHeight/2 && y + h/2 > paddleYLeft - paddleHeight/2 ) {
    if (speedX < 0) {
      speedX = -speedX*1;
    }
  }
  else if (x + w/2 > paddleXRight - paddleWidth/2 && y - h/2 < paddleYRight + paddleHeight/2 && y + h/2 > paddleYRight - paddleHeight/2 ) {
    if (speedX > 0) {
      speedX = -speedX*1;
    }
  }
}
void bounceOff() {
 if ( x > width - w/2) {
    setup();
    speedX = -speedX;
    scoreLeft = scoreLeft + 1;
  } else if ( x < 0 + w/2) {
    setup();
    scoreRight = scoreRight + 1;
  }
  if ( y > height - h/2) {
    speedY = -speedY;
  } else if ( y < 0 + h/2) {
    speedY = -speedY;
  }
}
void keyPressed() {
if (key == 'w' || key == 'W') {
    upL = true;
  }
  if (key == 's' || key == 'S') {
    downL = true;
  }
  if (keyCode == UP) {
    upR = true;
  }
  if (keyCode == DOWN) {
    downR = true;
  }
}
 
void keyReleased() {
  if (key == 'w' || key == 'W') {
    upL = false;
  }
  if (key == 's' || key == 'S') {
    downL = false;
  }
  if (keyCode == UP) {
    upR = false;
  }
  if (keyCode == DOWN) {
    downR = false;
  }
}
void CoolFactor() {
  
if (mousePressed) {
frameRate(250); }
else  {
frameRate(70);

}}

void timer() {
fill(255);
text(timer = millis() / 1000, 475 , 50); 
}
void scores() {
  fill(255);
  text(scoreLeft, 100, 50);
  text(scoreRight, width-100, 50);
}
void gameOver() {
  if(scoreLeft == win) {
    gameOverPage("Red wins!", colorLeft);
  }
  if(scoreRight == win) {
    gameOverPage("Green wins!", colorRight);
  }
}
void gameOverPage(String text, color c) {
  speedX = 0;
  speedY = 0;
  fill(255);
  text("Game over", width/2, height/3 - 40);
  fill(c);
  text(text, width/2, height/3);
  if(mousePressed) {
    scoreRight = 0;
    scoreLeft = 0;
    speedX = 4;
    speedY = 4;
  }
}

